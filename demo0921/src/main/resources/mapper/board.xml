<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.boardMapper">
	<resultMap type="java.util.Map" id="boardMap"></resultMap>
	<resultMap type="com.example.demo.vo.BoardMasterVO" id="bmMap">
		<id property="b_no" column="b_no" />
		<result property="b_title" column="b_title" />
		<result property="b_writer" column="b_writer" />
		<result property="b_content" column="b_content" />
		<result property="b_group" column="b_group" />
		<result property="b_pos" column="b_pos" />
		<result property="b_step" column="b_step" />
		<result property="b_hit" column="b_hit" />
		<result property="b_date" column="b_date" />
		<result property="b_pw" column="b_pw" />
		<result property="bs_file" column="bs_file" />
		<result property="bs_size" column="bs_size" />
		<result property="bs_seq" column="bs_seq" />
	</resultMap>
	<resultMap type="com.example.demo.vo.BoardSubVO" id="bsMap"></resultMap>
	<!-- 값이 어떻게 출력될까?
		{key:[{DeptVO},{DeptVO},{DeptVO}]}	// []가 list	
	 -->
	<!-- 
		콤보에서 선택한 값에 따라서 컬럼명을 변수처리 해야하는데 프로시저에서 select문 안에 컬럼자리를 변수로 치환불가함
		컬럼명이 고정된 경우에는 프로시저 사용이 가능하지만 
		아래 경우처럼 제목, 내용, 작성자 등으로 선택조건이 달라지면 조건절에 컬럼명이 동적으로 바뀌어야 하므로
		프로시저 사용이 불가한 경우임. 주의하자!!
		그러나 myBatis에서는 쿼리문 안에서 if문을 사용할 수 있으니까 가능하였다.
	 -->
	<select id="proc_boardList" parameterType="map" resultType="map" statementType="CALLABLE">
		{CALL proc_boardlist(#{cb_search, mode=IN, jdbcType=VARCHAR}
							,#{tb_search, mode=IN, jdbcType=VARCHAR}
							,#{key, jdbcType=CURSOR, mode=OUT, javaType=java.sql.ResultSet, resultMap=boardMap})}
	</select>
	<select id="proc_boardinsert" parameterType="map" resultType="map" statementType="CALLABLE">
		{CALL proc_boardinsert(#{b_no, mode=IN},#{b_title, mode=IN}, #{b_writer, mode=IN},#{b_content, mode=IN}
		,#{b_pw, mode=IN},#{b_group, mode=IN}, #{b_pos, mode=IN}, #{b_step, mode=IN}
		,#{result, jdbcType=NUMERIC, mode=OUT, javaType=int})}
	</select>
	<update id="hitCount" parameterType="map">
		UPDATE board_master_t
		   SET b_hit = b_hit + 1
		 WHERE b_no = #{b_no}
	</update>
	<delete id="boardMDelete" parameterType="map">
		DELETE FROM board_master_t
		 WHERE b_no = #{b_no}
	</delete>
	<insert id="boardMInsert" parameterType="map">
		INSERT INTO board_master_t(b_no, b_title, b_writer, b_content, b_pw, b_group, b_pos, b_step, b_date)
		VALUES(#{b_no}, #{b_title}, #{b_writer}, #{b_content}, #{b_pw}
			 , #{b_group}, #{b_pos}, #{b_step}, to_char(sysdate, 'YYYY-MM-DD'))
	</insert>
	<insert id="boardSInsert" parameterType="map">
		INSERT INTO board_sub_t(b_no, bs_seq, bs_file, bs_size)
		VALUES(#{b_no}, #{bs_seq}, #{bs_file}, #{bs_size})
	</insert>
	<update id="boardMUpdate" parameterType="map">
		UPDATE board_master_t
	 	   SET b_title = #{b_title}
	 	      ,b_writer = #{b_writer}
	 	      ,b_content = #{b_content}
 		 WHERE b_no = #{b_no}
	</update>
	<update id="bStepUpdate" parameterType="map">
		UPDATE board_master_t
	 	   SET b_step = b_step + 1
 		 WHERE b_group = #{b_group}
   		   AND b_step > #{b_step}
	</update>
	<select id="getBNo" parameterType="map" resultType="int">
		SELECT NVL((SELECT /*+index_desc(board_master_t BOARD_MASTER_NO_PK)*/ b_no
                      FROM board_master_t
                     WHERE rownum = 1),0)+1 b_no
 		  FROM dual
	</select>
	<select id="getBGroup" parameterType="map" resultType="int">
		SELECT NVL((SELECT /*+index_desc(board_master_t i_bgroup)*/ b_group
              	  	  FROM board_master_t
                 	 WHERE rownum = 1
                   	   AND b_group > 0),0)+1 b_group
      	  FROM dual
	</select>
	<select id="boardList" parameterType="java.util.Map" resultType="map">
		SELECT bm.b_no, bm.b_title, bm.b_writer, bs.bs_file, bm.b_hit
			  ,bm.b_content, bm.b_date, bm.b_group, bm.b_pos, bm.b_step
			  ,bm.b_pw, bs.bs_file, NVL(bs.bs_size,0) bs_size
		  FROM board_master_t bm LEFT OUTER JOIN board_sub_t bs
			ON bm.b_no = bs.b_no
	  <where>
	  	<if test='b_date!=null and b_date.length()>0 and !b_date.equals("undefined")'>
	  		AND bm.b_date = #{b_date}
	  	</if>
	  	<if test="b_no>0">
	  		AND bm.b_no = #{b_no}
	  	</if>
	  	<if test='cb_search!=null and cb_search.equals("b_title")'>
	  		AND bm.b_title LIKE '%'||#{tb_search}||'%'
	  	</if>
	  	<if test='cb_search!=null and cb_search.equals("b_content")'>
	  		AND bm.b_content LIKE '%'||#{tb_search}||'%'
	  	</if>
	  	<if test='cb_search!=null and cb_search.equals("b_writer")'>
	  		AND bm.b_writer LIKE '%'||#{tb_search}||'%'
	  	</if>
	  </where>
	  ORDER BY bm.b_group desc, b_step asc
	</select>
</mapper>